{"version":3,"sources":["components/Card/Card.jsx","components/ExpenseFilter/ExpensesFilter.jsx","components/ExpenseDate/ExpenseDate.jsx","components/ExpenseItem/ExpenseItem.jsx","components/ExpensesList/ExpensesList.jsx","components/Chart/ChartBar.jsx","components/Chart/Chart.jsx","components/ExpensesChart/ExpensesChart.jsx","components/Expenses/Expenses.jsx","components/ExpenseForm/ExpenseForn.jsx","components/NewExpense/NewExpense.jsx","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","preventDefault","year","target","addYearHandler","ExpenseDate","month","date","toLocaleString","day","getFullYear","ExpenseItem","useState","title","expenseTitle","setexpenseTitle","expenseAmount","amount","onClick","console","log","ExpensesList","items","length","map","e","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointsValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Expenses","setYear","filteredExpenses","filter","toString","y","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","displayForm","setdisplayForm","addDisplayHandler","prevState","onSubmit","expenseData","Date","replace","onSaveExpenseData","type","min","step","NewExpense","enteredExpemseData","random","onAddExpenase","DUMMY_EXPENSES","App","setExoenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a5224d1.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nconst Card = (props) => {\r\n  const classes = 'card ' + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import './ExpemsesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const yearChangeHandler = (event) => {\r\n    event.preventDefault();\r\n    const year = event.target.value;\r\n    props.addYearHandler(year);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={yearChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__day\">{day},</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import React, { useState } from 'react';\r\n\r\nimport ExpenseDate from '../ExpenseDate/ExpenseDate';\r\nimport Card from '../Card/Card';\r\nimport './ExpenseItem.css';\r\n\r\nfunction ExpenseItem(props) {\r\n  const [expenseTitle, setexpenseTitle] = useState(props.title);\r\n  const expenseAmount = props.amount;\r\n\r\n  const clickHandler = () => {\r\n    setexpenseTitle('Updated');\r\n    console.log(expenseTitle);\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{expenseTitle}</h2>\r\n          <div className=\"expense-item__price\">${expenseAmount}</div>\r\n        </div>\r\n        <button onClick={clickHandler}>Change Title</button>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from 'react';\r\n\r\nimport ExpenseItem from '../ExpenseItem/ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((e) => (\r\n        <ExpenseItem\r\n          key={e.id}\r\n          date={e.date}\r\n          title={e.title}\r\n          amount={e.amount}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from 'react';\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    console.log(barFillHeight);\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from 'react';\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n  const dataPointsValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointsValues);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 >> January\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import { useState } from 'react';\r\n// import ExpenseItem from '../ExpenseItem/ExpenseItem';\r\nimport Card from '../Card/Card';\r\nimport ExpensesFilter from '../ExpenseFilter/ExpensesFilter';\r\nimport ExpensesList from '../ExpensesList/ExpensesList';\r\nimport ExpensesChart from '../ExpensesChart/ExpensesChart';\r\nimport './Expenses.css';\r\n\r\nconst Expenses = (props) => {\r\n  const expenses = props.expenses;\r\n  const [year, setYear] = useState('2021');\r\n\r\n  const addYearHandler = (y) => {\r\n    setYear(y);\r\n  };\r\n\r\n  const filteredExpenses = expenses.filter(\r\n    (expense) => expense.date.getFullYear().toString() === year\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter selected={year} addYearHandler={addYearHandler} />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList items={filteredExpenses} />\r\n\r\n        {/* {filteredExpenses.map((e) => (\r\n          <ExpenseItem\r\n            key={e.id}\r\n            date={e.date}\r\n            title={e.title}\r\n            amount={e.amount}\r\n          />\r\n        ))} */}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from 'react';\r\n\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n  const [displayForm, setdisplayForm] = useState(false);\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    // const date = new Date(enteredDate.replace(/-/g, '/'));\r\n    // console.log(date);\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate.replace(/-/g, '/')),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n\r\n  const addDisplayHandler = () => {\r\n    console.log('Add Form Handler.');\r\n    setdisplayForm((prevState) => !prevState);\r\n  };\r\n\r\n  if (displayForm) {\r\n    return (\r\n      <form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n          <div className=\"new-expense__control\">\r\n            <label>Title</label>\r\n            <input type=\"text\" onChange={titleChangeHandler} />\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Amount</label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0.01\"\r\n              step=\"0.01\"\r\n              onChange={amountChangeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Date</label>\r\n            <input\r\n              type=\"date\"\r\n              min=\"2019-01-01\"\r\n              max=\"2022-12-31\"\r\n              onChange={dateChangeHandler}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"new-expense__display\">\r\n          <div className=\"new-expense__actions\">\r\n            <button type=\"button\" onClick={addDisplayHandler}>\r\n              Cancel\r\n            </button>\r\n          </div>\r\n          <div className=\"new-expense__actions\">\r\n            <button type=\"submit\">Add Expense</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  if (!displayForm) {\r\n    return (\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__display\">\r\n          <button onClick={addDisplayHandler}>Add New Expense</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // let content_text = displayForm ? (\r\n  //   <form onSubmit={submitHandler}>\r\n  //     <div className=\"new-expense__controls\">\r\n  //       <div className=\"new-expense__control\">\r\n  //         <label>Title</label>\r\n  //         <input type=\"text\" onChange={titleChangeHandler} />\r\n  //       </div>\r\n  //       <div className=\"new-expense__control\">\r\n  //         <label>Amount</label>\r\n  //         <input\r\n  //           type=\"number\"\r\n  //           min=\"0.01\"\r\n  //           step=\"0.01\"\r\n  //           onChange={amountChangeHandler}\r\n  //         />\r\n  //       </div>\r\n  //       <div className=\"new-expense__control\">\r\n  //         <label>Date</label>\r\n  //         <input\r\n  //           type=\"date\"\r\n  //           min=\"2019-01-01\"\r\n  //           max=\"2022-12-31\"\r\n  //           onChange={dateChangeHandler}\r\n  //         />\r\n  //       </div>\r\n  //     </div>\r\n  //     <div className=\"new-expense__display\">\r\n  //       <div className=\"new-expense__actions\">\r\n  //         <button type=\"button\" onClick={addDisplayHandler}>\r\n  //           Cancel\r\n  //         </button>\r\n  //       </div>\r\n  //       <div className=\"new-expense__actions\">\r\n  //         <button type=\"submit\">Add Expense</button>\r\n  //       </div>\r\n  //     </div>\r\n  //   </form>\r\n  // ) : (\r\n  //   <div className=\"new-expense__controls\">\r\n  //     <div className=\"new-expense__display\">\r\n  //       <button onClick={addDisplayHandler}>Add New Expense</button>\r\n  //     </div>\r\n  //   </div>\r\n  // );\r\n\r\n  // return <div>{content_text}</div>;\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React from 'react';\r\nimport ExpenseForm from '../ExpenseForm/ExpenseForn';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n  const saveExpenseDataHandler = (enteredExpemseData) => {\r\n    const expenseData = { ...enteredExpemseData, id: Math.random().toString() };\r\n    console.log('In NewExpense..');\r\n    props.onAddExpenase(expenseData);\r\n  };\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState } from 'react';\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date('2021/5/29'),\n  },\n  {\n    id: 'e2',\n    title: 'Food',\n    amount: 50.87,\n    date: new Date('2021/5/18'),\n  },\n  {\n    id: 'e3',\n    title: 'House Rent',\n    amount: 899.55,\n    date: new Date('2020/3/15'),\n  },\n  {\n    id: 'e4',\n    title: 'Movies',\n    amount: 33.45,\n    date: new Date('2021/9/9'),\n  },\n];\n\nfunction App() {\n  const [expenses, setExoenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    console.log('In App.js');\n    setExoenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpenase={addExpenseHandler} />\n      <Expenses expenses={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}